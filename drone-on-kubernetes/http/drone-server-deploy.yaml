apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: drone-server
  labels:
    heritage: drone-demos
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: drone-server
    spec:
      containers:
        - image: drone/drone:0.5
          imagePullPolicy: Always
          name: drone-server
          env:
            - name: DRONE_SERVER_ADDR
              value: ":80"
            - name: I_UNDERSTAND_I_AM_USING_AN_UNSTABLE_VERSION
              value: "true"
            - name: I_AGREE_TO_FIX_BUGS_AND_NOT_FILE_BUGS
              value: "true"

            - name: DRONE_DEBUG
              valueFrom:
                configMapKeyRef:
                  name: drone-config
                  key: server.debug.is.enabled
            - name: DRONE_SECRET
              valueFrom:
                secretKeyRef:
                  name: drone-secrets
                  key: server.secret

            - name: DRONE_DATABASE_DRIVER
              valueFrom:
                configMapKeyRef:
                  name: drone-config
                  key: server.database.driver
            - name: DRONE_DATABASE_DATASOURCE
              valueFrom:
                configMapKeyRef:
                  name: drone-config
                  key: server.database.config

            - name: DRONE_OPEN
              valueFrom:
                configMapKeyRef:
                  name: drone-config
                  key: server.is.open
            - name: DRONE_ORGS
              valueFrom:
                configMapKeyRef:
                  name: drone-config
                  key: server.orgs.list
            - name: DRONE_ADMIN
              valueFrom:
                configMapKeyRef:
                  name: drone-config
                  key: server.admin.list
            - name: DRONE_ADMIN_ALL
              valueFrom:
                configMapKeyRef:
                  name: drone-config
                  key: server.admin.everyone.is.admin

            # GITLAB
            - name: DRONE_GITLAB
              value: "true"
            - name: DRONE_GITLAB_CLIENT
              value: "e60063662652f6521a1045e3e9e1c838551eb292dce1319069b33634e975939e"
            - name: DRONE_GITLAB_SECRET
              value: "0ce9a4861c6c43fb9b62b11d39652c34136ececee707a4d6b65c896a7ccfbc15"
            - name: DRONE_GITLAB_SKIP_VERIFY
              value: "true"
            - name: DRONE_GITLAB_URL
              value: "<change>"
            # ====================================
            # GITHUB
            # - name: DRONE_GITHUB
            #   valueFrom:
            #     configMapKeyRef:
            #       name: drone-config
            #       key: server.remote.github.is.enabled
            # - name: DRONE_GITHUB_CLIENT
            #   valueFrom:
            #     configMapKeyRef:
            #       name: drone-config
            #       key: server.remote.github.client.id
            # - name: DRONE_GITHUB_SECRET
            #   valueFrom:
            #     configMapKeyRef:
            #       name: drone-config
            #       key: server.remote.github.secret
            # ====================================
            # BITBUCKET
            # - name: DRONE_BITBUCKET
            #   valueFrom:
            #     configMapKeyRef:
            #       name: drone-config
            #       key: server.remote.bitbucket.is.enabled
            # - name: DRONE_BITBUCKET_CLIENT
            #   valueFrom:
            #     configMapKeyRef:
            #       name: drone-config
            #       key: server.remote.bitbucket.client.id
            # - name: DRONE_BITBUCKET_SECRET
            #   valueFrom:
            #     configMapKeyRef:
            #       name: drone-config
            #       key: server.remote.bitbucket.secret
            # ====================================
          ports:
            - containerPort: 80
              protocol: TCP
          volumeMounts:
            # Persist our configs in an SQLite DB in here
            - mountPath: /var/lib/drone
              name: drone-server-sqlite-db
            # Enables Docker in Docker
            - mountPath: /var/run/docker.sock
              name: docker-socket
          resources:
            requests:
              cpu: 40m
              memory: 32Mi
      volumes:
        - name: drone-server-sqlite-db
          gcePersistentDisk:
            pdName: drone-server-sqlite-db
            fsType: ext4
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
